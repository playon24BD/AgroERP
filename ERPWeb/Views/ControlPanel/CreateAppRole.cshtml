
@{
    ViewBag.Title = "CreateAppRole";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row" style="margin-top:-8px">
    <div class="col-md-12">
        <div class="px-2 py-1" style="background-color:#001f3f;margin-top:-15px">
            <div class="row text-sm align-items-center">
                <div class="col-md-3">
                    <a href="@Url.Action("AppUserConfiguration","ControlPanel")" class="emnDrop-btn" title="Back To List">
                        <i class="fas fa-arrow-circle-left"></i>
                    </a>
                </div>
                <div class="col-md-6">
                    <h6 class="text-center text-white text-bold">@ViewBag.PageHead</h6>
                </div>

                <div class="col-md-3">
                    <button type="submit" class="emnsave-btn" id="btnSubmit">
                        Save...<i class="fas fa-paper-plane"></i>
                    </button>
                </div>

            </div>
        </div>


    </div>
</div>

<div class="row" style="margin-top:15px">
    <div class="col-md-12">

        <div class="px-2 py-1" style="background-color: #20B2AA; margin-top: -15px">
            <div class="row text-sm align-items-center">

                    <input type="hidden" id="hdfRoleId" value="@ViewBag.Id" />
                    <div class="col-md-4">
                        @Html.AntiForgeryToken()
                        <input type="text" name="role"placeholder="RoleName" value="@ViewBag.RoleName" id="txtRoleName" class="form-control form-control-sm" />
                        <span class="error hide required-roleName font-weight-bold">Input Role Name!</span>
                        <span class="error hide duplicate-roleName font-weight-bold">Already RoleName Exist!</span>
                        <span class="error hide invalid-roleName font-weight-bold">Invalid Role!</span>
                    </div>
                    <div class="col-md-4">
                        @Html.DropDownList("ddlOrganizationName", (IEnumerable<SelectListItem>)ViewBag.ddlOrganizationName, "--Select Organization--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                        <span class="error hide req-org font-weight-bold">Organization is required!</span>
                    </div>
                    <div class="col-md-4">

                    </div>

            </div>
        </div>

    </div>
 </div>
        <div class="row" style="margin-top:0px">
            <div class="col-md-12">
            
                        <div class="col-md-12" style="max-height:500px;overflow-y:scroll">
                            <table class="table table-sm table-avatar table-responsive-lg" id="tblMenuData"></table>
                        </div>

            </div>
        </div>


        @section scripts{
            <script type="text/javascript">
        var hdfRoleId = $("#hdfRoleId");
        var txtRoleName = $("#txtRoleName");
        var ddlOrganizationName = $("#ddlOrganizationName");
        var tblMenuData = $("#tblMenuData");
        var menus = [];

        $(document).ready(function () {
            if (TryParseInt(hdfRoleId.val(), 0) > 0) {
                ddlOrganizationName.val('@ViewBag.OrgId');
                loadMenu();
            }
        })

        ddlOrganizationName.change(function () {
            tblMenuData.empty();
            if (TryParseInt(ddlOrganizationName.val(), 0)) {
                loadMenu();
            }
        })

        function loadMenu() {
            var data = JSON.stringify({ flag: "roleMenus", roleId: hdfRoleId.val(), orgId: ddlOrganizationName.val() });
            $.when(postReqWithData(dataType.applicationJson, dataType.json, type.post, '/ControlPanel/AppUserConfiguration', data)).then(function (res, status) {
                if (status === 'success') {
                    console.log(res);
                    SetUserMenuUI(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
        }

        function SetUserMenuUI(obj) {
            if (!$.isEmptyObject(obj)) {

                tblMenuData.empty();

                var menus = obj.menuDetail;
                $.each(menus, function (index, item) {

                    // Module
                    var trModule = "<tr class='alert alert-dark'><td colspan='9' title='Module' class='text-center text-bold text-lg'><b>" + item.ModuleName + "</b></td></tr>";
                    tblMenuData.append(trModule);

                    $.each(item.Menus, function (idx, itm) {
                        // Mainmenu
                        var tr = "";
                        $.each(itm.SubMenus, function (ix, im) {
                            // Submenu

                            var td1 = "<td title='Mainmenu' class='text-center' style='vertical-align:middle' data-mainmenu-item='" + itm.MenuId + "' data-module-item='" + item.ModuleId + "'>" + itm.MenuName + "</td >";

                            var td2 = "<td class='" + (im.TaskId > 0 ? "alert alert-warning" : "alert alert-info") + "' title='Submenu'><input type='checkbox' " + (im.TaskId > 0 ? "checked='checked'" : "") + " id='" + im.SubmenuId + "'data-val-for='submenu' data-item-sub='" + im.SubmenuId + "' data-item-menu='" + itm.MenuId + "' data-item-module='" + item.ModuleId + "' data-item-task='" + im.TaskId + "' data-item-parentsub='" + im.ParentSubMenuId + "' />" + im.SubMenuName + "</td>";

                            var isAll = false;
                            if (im.Add && im.Edit && im.Delete && im.Approval && im.Report) {
                                isAll = true;
                            }
                            var isAllactive = isAll ? 'checked="checked"' : '';
                            var td3 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='all" + im.SubmenuId + "' " + isAllactive + "/> All";

                            var td4 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='add" + im.SubmenuId + "' " + (im.Add ? 'checked="checked"' : '') + "/> Add";

                            var td5 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='edit" + im.SubmenuId + "' " + (im.Edit ? 'checked="checked"' : '') + "/> Edit";

                            var td6 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='detail" + im.SubmenuId + "' " + (im.Detail ? 'checked="checked"' : '') + "/> Detail";

                            var td7 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='delete" + im.SubmenuId + "' " + (im.Delete ? 'checked="checked"' : '') + "/> Delete";

                            var td8 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='approval" + im.SubmenuId + "' " + (im.Approval ? 'checked="checked"' : '') + "/> Approval";

                            var td9 = "<td><input type='checkbox' data-control-for='action' data-action-for='" + im.SubmenuId + "' id='report" + im.SubmenuId + "' " + (im.Report ? 'checked="checked"' : '') + "/> Report";

                            tr += '<tr data-item-name="menurow">' + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + '</tr>';
                        });
                        if (itm.SubMenus.length == 0) {
                            var td1 = "<td data-mainmenu-id='" + itm.MenuId + "' class='text-center' style='vertical-align: middle'>" + itm.MenuName + "</td>";
                            var td2 = "<td colspan='8'>No Submenus Found.</td>";
                            tr = "<tr data-item-name='menurow'>" + td1 + td2 + "</tr>";
                        }
                        tblMenuData.append(tr);
                    });
                    if (item.Menus.length == 0) {
                        var trMenu = '<tr><td colspan="9" class="text-center">No Menus Found.</td></tr>';
                        tblMenuData.append(trMenu);
                    }
                });
                fixit(tblMenuData);
            }
        }

        function fixit(selector) {
            selector.each(function () {
                var values = $(this).find("tr>td:first-of-type")
                var run = 1
                for (var i = values.length - 1; i > -1; i--) {
                    if (values.eq(i).text() === values.eq(i - 1).text()) {
                        values.eq(i).remove()
                        run++
                    } else {
                        values.eq(i).attr("rowspan", run)
                        run = 1
                    }
                }
            })
        }

        function validateForm() {
            $(".error").addClass("hide");
            menus.length = 0;
            var isValid = true;
            if (ddlOrganizationName.val() === "") {
                $(".req-org").removeClass('hide');
                isValid = false;
            }
            if ($.trim(txtRoleName.val()) == "") {
                $(".required-roleName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfRoleId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ roleId: id, roleName: txtRoleName.val().trim(), orgId: ddlOrganizationName.val() }), '/Common/IsDuplicateRoleName', getToken()) == true) {
                    $(".duplicate-roleName").removeClass("hide");
                    isValid = false;
                }
            }
            menus = fnRoleMenus();
            if (menus.length == 0) {
                toastr.error("Please select menus for this role", null, { timeOut: 1500 })
                isValid = false;
            }
            return isValid;
        }

        $(document).on('click', "input[type='checkbox'][data-val-for='submenu']", function (e) {
            var i = $(this).is(':checked')
            console.log('checked...');
            if (i === true) {
                $(this).parent().removeClass('alert alert-info');
                $(this).parent().addClass('alert alert-warning');
            }
            else {
                $(this).parent().removeClass('alert alert-warning');
                $(this).parent().addClass('alert alert-info');
            }
        })

        $(document).on("click", "input[type='checkbox'][id^='all']", function (e) {
            var id = $(this).attr('data-action-for');
            if ($(this).is(":checked")) {
                ////console.log("All is checked");
                $("input[type='checkbox'][data-action-for='" + id + "']").prop("checked", true);
            }
            else {
                ////console.log("All is UnChecked");
                $("input[type='checkbox'][data-action-for='" + id + "']").prop("checked", false);
            }
        })

        $(document).on('click', 'input[type="checkbox"][data-control-for="action"]', function (e) {
            //if ($(this).is(":checked")) {
            var tr = $(this).parent().parents('tr');
            var tdLength = $(this).parent().parents('tr').children('td').length;
            console.log('Tr length=' + tdLength);
            var isReport = (tr.find('td').eq(tdLength - 1).children('input[type="checkbox"]').is(":checked")) == true ? true : false;
            var isApproval = (tr.find('td').eq(tdLength - 2).children('input[type="checkbox"]').is(":checked")) == true ? true : false;
            var isDelete = (tr.find('td').eq(tdLength - 3).children('input[type="checkbox"]').is(":checked")) == true ? true : false;

            var isDetail = (tr.find('td').eq(tdLength - 4).children('input[type="checkbox"]').is(":checked")) == true ? true : false;
            var isEdit = (tr.find('td').eq(tdLength - 5).children('input[type="checkbox"]').is(":checked")) == true ? true : false;
            var isAdd = (tr.find('td').eq(tdLength - 6).children('input[type="checkbox"]').is(":checked")) == true ? true : false;

            if (isReport && isApproval && isDelete && isEdit && isAdd && isDetail) {
                tr.find('td').eq(tdLength - 7).children('input[type="checkbox"][id^="all"]').prop("checked", true);
                //alert('data-control-for 1');
            }
            else {
                tr.find('td').eq(tdLength - 7).children('input[type="checkbox"][id^="all"]').prop("checked", false);
                //alert('data-control-for 2');
            }
            //}
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            if (validateForm()) {
                var roleData = {
                    RoleId: TryParseInt(hdfRoleId.val(), 0),
                    RoleName: txtRoleName.val(),
                    OrganizationId: ddlOrganizationName.val()
                };

                var data = JSON.stringify({ role: roleData, models: menus });
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ControlPanel/SaveAppRole', data, getToken())).then(function (res, status) {
                    if (res === true && status === 'success') {
                        $('.toastrDefaultSuccess').trigger("click");
                        $('.toastrDefaultSuccess').fadeOut(500);
                        setTimeout(function () {
                            redirectPage('@Url.Action("AppUserConfiguration")');
                        }, 1000);
                    }
                    else {
                        $('.toastrDefaultError').trigger("click");
                        $('.toastrDefaultError').fadeOut(500);
                    }
                }).fail(function (error) {
                    console.log(error);
                })
            }
        })

        function fnRoleMenus() {
            var dataAry = [];
            dataAry.length = 0;
            tblMenuData.each(function () {
                //console.log('Inside Loop');
                var trs = $(this).find('tr[data-item-name="menurow"]');
                ////console.log(trs);
                $.each(trs, function (index, item) {
                    var tdLength = $(item).children('td').length;
                    var i = tdLength === 9 ? 1 : 0;
                    if (($(item).find('td').eq((0 + i)).children('input[type="checkbox"]').is(":checked")) == true) {
                        //console.log('Checked....');
                        var submenuId = $(item).find('td').eq((0 + i)).children('input[type="checkbox"]').attr('data-item-sub');
                        var mainmenuId = $(item).find('td').eq((0 + i)).children('input[type="checkbox"]').attr('data-item-menu');
                        var moduleId = $(item).find('td').eq((0 + i)).children('input[type="checkbox"]').attr('data-item-module');
                        var taskId = $(item).find('td').eq((0 + i)).children('input[type="checkbox"]').attr('data-item-task');
                        var parentId = $(item).find('td').eq((0 + i)).children('input[type="checkbox"]').attr('data-item-parentsub');
                        var add = $(item).find('td').eq((2 + i)).children('input[type="checkbox"]').is(":checked");
                        var edit = $(item).find('td').eq((3 + i)).children('input[type="checkbox"]').is(":checked");
                        var detail = $(item).find('td').eq((4 + i)).children('input[type="checkbox"]').is(":checked");
                        var del = $(item).find('td').eq((5 + i)).children('input[type="checkbox"]').is(":checked");
                        var approval = $(item).find('td').eq((6 + i)).children('input[type="checkbox"]').is(":checked");
                        var rpt = $(item).find('td').eq((7 + i)).children('input[type="checkbox"]').is(":checked");

                        dataAry.push({
                            TaskId: taskId,
                            RoleId: TryParseInt(hdfRoleId.val(), 0),
                            ModuleId: moduleId,
                            MainmenuId: mainmenuId,
                            SubmenuId: submenuId,
                            ParentSubmenuId: parentId,
                            Add: add,
                            Edit: edit,
                            Detail: detail,
                            Delete: del,
                            Approval: approval,
                            Report: rpt,
                            OrganizationId: TryParseInt(ddlOrganizationName.val(), 0)
                        })
                    }
                    console.log(tdLength);
                })
                console.log(dataAry);
            })

            return dataAry;
        }
        function redirectPage(page) {
            window.location.replace(page);
        }
            </script>
        }
