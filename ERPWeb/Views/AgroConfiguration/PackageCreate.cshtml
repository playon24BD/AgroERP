@{
    ViewBag.Title = "CreatePackage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row text-sm" style="margin-top:-25px">
    <div class="col-md-12">

        <div class="row">
            <div class="col-md-12">
                <div class="card mb-0" style="background-color:#001f3f">
                    <div class="px-2 py-1">

                        <div class="row align-items-center">
                            <div class="col-md-3">
                                <a href="/AgroConfiguration/GetPackageList" class="float-left emnDrop-btn" title="Go To List">
                                    <i class="fas fa-arrow-alt-circle-left"></i>
                                </a>
                            </div>
                            <div class="col-md-6 text-center ">
                                <h6 class="text-center text-bold text-white mb-0">Create Package</h6>
                            </div>
                            <div class="col-md-3">
                                <button type="submit" id="btnSubmit" class="emnsave-btn">
                                    <i class="fas fa-paper-plane"></i> Save
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="card-body px-2 py-1">
            <div class="row">
                <div class="col-md-12" style="border-right:2px solid #efefef">

                    <div class="row justify-content-center">

                        <div class="col-md-2 pr-0">
                            <label for="ddlpackagename" class="control-label mb-0">PackageName <span style="color:red">*</span><span class="font-weight-bold mt-1" style="color:darkblue"> </span></label>
                            <input type="text" placeholder="PACKAGE NAME" name="ddlpackagename" id="ddlpackagename" class="form-control form-control-sm pr-0" />
                            <span class="error hide req-src-ddlpackagenameddlpackagename text-bold">ProductQty is required!</span>
                        </div>

                        <div class="col-md-2 pr-0">
                            <label class="control-label font-weight-bold mb-0">Start Date<span style="color:red">*</span></label>
                            <div class="input-group input-group-sm ">
                                <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed pr-0" id="dptFromDate" placeholder="START DATE" />
                                <span class="error hide req-dptFromDate">From is Required</span>
                            </div>
                        </div>
                        <div class="col-md-2 pr-0">
                            <label class="control-label font-weight-bold mb-0">End Date<span style="color:red">*</span></label>
                            <div class="input-group input-group-sm ">
                                <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed pr-0" id="dptToDate" placeholder="END DATE" />
                                <span class="error hide req-dptToDate">ToDate is Required</span>

                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="col-form-label pt-0 mb-0 pb-0" for="model">Total Amount</label>
                            <input type="number" id="ddlpayableamount" name="ddlpayableamount" class="form-control form-control-sm bg-dark text-white text-bold pr-0" readonly />
                        </div>


                    </div>

                </div>

            </div>
            <div class="row">
                <div class="col-md-12">

                    <div class="row justify-content-center">
                        <div class="col-md-2 pr-0">
                            <label for="ddlProductName" class="col-form-label text-black pb-0">
                                Product<span style="color:red">*</span>
                            </label>
                            @Html.DropDownList("ddlProductName", (IEnumerable<SelectListItem>)ViewBag.ddlProductName, "Product", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                            <span class="error hide req-ProductName font-weight-bold">Product Name is required!</span>
                        </div>
                        <div class="hide">
                            <input type="text" id="ddlfgrid" class="form-control form-control-sm" readonly />
                        </div>
                        <div class="col-md-3 pr-0">
                            <label for="ddlMeasurementName" class="col-form-label text-black pb-0">
                                Measurement<span style="color:red">*</span>
                            </label>
                            @Html.DropDownList("ddlMeasurementName", (IEnumerable<SelectListItem>)ViewBag.ddlMeasurementName, "Measurement", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                            <span class="error hide req-MeasurementName font-weight-bold">Measurement Name is required!</span>
                        </div>

                        <div class="col-md-2 pr-0">
                            <label for="txtQuanity" class="col-form-label text-black pb-0">Quantity<span style="color:red">*</span></label>
                            <input type="number" id="txtQuanity" class="form-control form-control-sm" placeholder="QTY" />
                            <span class="error hide req-Quanity">Quantity is required</span>
                        </div>
                        <div class="col-md-2 pr-0">
                            <label for="ddlPrice" class="col-form-label text-black pb-0">Rate/PC</label>
                            <input type="text" id="txtPrice" class="form-control form-control-sm" placeholder="PRICE" />
                            <span class="error hide req-txtPrice">Price not Configure</span>
                        </div>
                        <div class="col-md-1 pr-0">
                            <label for="ddlMode" class="col-form-label pb-0">Status</label>
                            <select id="ddlMode" class="form-control form-control-sm select2">
                                <option value="">Select</option>
                                <option value="Paid">Paid</option>
                                <option value="Gift">Gift</option>
                            </select>
                            <span class="error hide req-ddlMode">Mode Is Required</span>
                        </div>
                        <div class="col-md-1">
                            <label for="" class="col-form-label font-weight-bold pb-0" style="visibility:hidden">Add</label>
                            <div class="clearfix">
                                <button type="submit" class="float-left float-md-start text-bold" id="btnAddToList" title="Add"><i class="fas fa-plus"></i></button>
                            </div>
                        </div>
                        <div class="hide">
                            <label>TotalAmount</label>
                            <input type="number" id="txtTotalAmount" name="TotalAmount" class="form-control form-control-sm" readonly />
                        </div>


                    </div>


                </div>

            </div>
        </div>


        <div class="row mt-2">
            <div class="col-md-12">
                @Html.AntiForgeryToken()
                <table class="table table-head-fixed text-nowrap table-bordered table-sm table-striped table-responsive-lg" id="tblList">
                    <thead>
                        <tr class="text-center btn-dark">
                            <th style="width:8%;background-color:black; color:white">#SL</th>
                            <th style="width: 20%; background-color: black; color: white">Product</th>
                            <th style="width: 10%; background-color: black; color: white">Measurment</th>
                            <th style="width: 10%; background-color: black; color: white">Quantity</th>
                            <th style="width: 10%; background-color: black; color: white">Amount</th>
                            <th style="width: 10%; background-color: black; color: white">Status</th>
                            <th style="width: 12%; background-color: black; color: white">Action</th>
                            <th class="hide RawMaterialId"></th>
                            <th class="hide UnitId"></th>

                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>

        @*Total*@
        <table class="table table-head-fixed text-nowrap table-bordered table-sm table-striped table-responsive-lg tablesubtotal" style="margin-top:-15px">
            <thead>
                <tr class="text-center">

                    <th>Total</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th class="totalsub">0</th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="bg-gradient-gray"></tbody>
        </table>
        @*Total*@




    </div>
</div>

@section scripts{
    <script type="text/javascript">

        var dateCalenderYear = $("#dateCalenderYear");
        var dateCalenderYearEdit = $("#dateCalenderYearEdit");
        var dateCalenderYearSearch = $("#dateCalenderYearSearch");
        var dptFromDate = $("#dptFromDate");
        var dptToDate = $("#dptToDate");
        var dptFromDateEdit = $("#dptFromDateEdit");
        var dptToDateEdit = $("#dptToDateEdit");


        //nec
        var ddlpackagename = $("#ddlpackagename");
        var ddlProductName = $("#ddlProductName");
        var ddlMeasurementName = $("#ddlMeasurementName");
        var ddlMeasurementSize = $("#ddlMeasurementSize");
        var ddlQuanity = $("#ddlQuanity");
        var txtPrice = $("#txtPrice");
        var ddlfgrid = $("#ddlfgrid");
        var txtTotalAmount = $("#txtTotalAmount");
        var txtQuanity = $("#txtQuanity");
        var ddlMode = $("#ddlMode");
        var ddlpayableamount = $("#ddlpayableamount");

        var ddlRawMaterialList = [];


        $(document).ready(function () {


            $('.select2').select2();
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });

            $(function () {
                $('#ddlProductName').focus();
            });


            dptFromDate.prop('readonly', true);
            dptToDate.prop('readonly', true);

            dptFromDate.css("background-color", "#fff");
            dptToDate.css("background-color", "#fff");
            $('#dptFromDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true
            });
            $('#dptToDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true
            });



        })




        ddlProductName.change(function () {
            Loadmeasurment();

        })
        function Loadmeasurment() {
           // debugger;
            clearDropdown("ddlMeasurementName");
            if (ddlProductName.val() != "") {
                var FinishGoodProductInfoId = ddlProductName.val();

                LoadDropDown('/AgroConfiguration/GetmeasurmentUnitQtyByProductionId', 'POST', ddlMeasurementName, JSON.stringify({ FinishGoodProductInfoId: ddlProductName.val() }));
               // debugger;
            }
            else {
                clearDropdown("ddlMeasurementName");

            }
        }



        ddlMeasurementName.change(function () {
           // debugger;
            //alert("test");


            var data = { FinishGoodProductId: TryParseInt(ddlProductName.val(), 0), MeasurementId: TryParseInt(ddlMeasurementName.val(), 0) };
            $.when(getReqWithData('Html', "Get", "/AgroConfiguration/GetFGRId", data)).then(function (res, status) {
                // debugger;
                console.log(res);

                consoleLog(res.replace(/['"]+/g, ''));
                var FGRId = res.replace(/['"]+/g, '');
                ddlfgrid.val(FGRId);
                console.log(ddlfgrid.val());



                let proid = $("#ddlProductName option:selected").val();
                let fgrid = FGRId;
               // debugger;
                var data = { pid: TryParseInt(proid, 0), rid: TryParseInt(fgrid, 0) };
                $.when(getReqWithData('Html', "Get", "/AgroConfiguration/ProductPrice", data)).then(function (res, status) {


                    consoleLog(res.replace(/['"]+/g, ''));
                    var proprice = res.replace(/['"]+/g, '');
                    txtPrice.val(res.proprice);
                    txtPrice.val(proprice);

                });



            });


        })





        $("#btnAddToList").click(function (e) {
            e.preventDefault();
           // debugger;

           if (validates() == true) {

                var sl = $("#tblList tbody tr").length;
                var td1 = "<td class='text-center text-bold'>" + (sl + 1) + "</td>"
                var td2 = "<td class='text-center'>" + dropDownSelectedText("ddlProductName") + "</td>";
                var td3 = "<td class='text-center'>" + dropDownSelectedText("ddlMeasurementName") + "</td>";
                var td4 = "<td class='text-center'>" + txtQuanity.val() + "</td>";
                var td5 = "<td class='text-center'>" + txtTotalAmount.val() + "</td>";
                var td6 = "<td class='text-center'>" + ddlMode.val() + "</td>";
               var td7 = "<td class='text-center'><a href='#' class='emn-btn data-onfly-del' data-subtotal='" + txtTotalAmount.val() + "'><i class='far fa-trash-alt'></i></a></td>";
                var td8 = "<td class='hide ProductId'>" + ddlProductName.val() + "</td>";
                var td9 = "<td class='hide MeasurementId'>" + ddlMeasurementName.val() + "</td>";
                var td10 = "<td class='hide fgrid'>" + ddlfgrid.val() + "</td>";



                var tr = "<tr class='text-sm'>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + td9 + td10 + "</tr>";



                //totalprice
                to = parseFloat($('.totalsub').text()) + parseFloat(txtTotalAmount.val());
                $('.totalsub').text(to);
                console.log(to);
                //totalprice


                var totalsu = $('.totalsub').text();//initilize class total
                ddlpayableamount.val(totalsu);

                $("#tblList tbody").append(tr);



            }

            ClearData();
        })


        $(document).on("click", "a.data-onfly-del", function (e) {
            e.preventDefault();
           // debugger;
            var index = $(this).parent().parents('tbody tr').index();
            var tds = $(this).parent().parents('tbody tr').children('td');



            //tt
            var subtotal = $(this).data("subtotal");

            console.log(subtotal);

            //tt


            var rId = tds.eq(7).html();
            console.log("rId :" + rId);
            const mid = ddlRawMaterialList.indexOf(rId);

            ddlRawMaterialList.splice(mid, 1);


            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    //debugger;
                    removeTableRow("#tblList tbody", index);
                    fnFixTheTbodyRowSerialInDecsOrder("#tblList", index);



                    var totals = parseFloat($(".totalsub").text()) - parseFloat(subtotal);
                    $('.totalsub').text(totals);



                    ddlpayableamount.val(totals);

                };
            }));


        })

        txtQuanity.keyup(function ()
        {
            //debugger;

            if (txtQuanity.val() >= 0 && txtPrice.val() >= 0) {
                //debugger;

                totalAmounts();

            }


        });

        txtPrice.keyup(function () {
           // debugger;

            if (txtQuanity.val() >= 0 && txtPrice.val() >= 0)
            {
               // debugger;

                totalAmounts();

            }


        });


        function totalAmounts() {
           // debugger;
            var sub = txtQuanity.val() * txtPrice.val();
            txtTotalAmount.val(sub);


        }

        function ClearData() {
            txtQuanity.val("");
            ddlMode.val("");
            ddlMode.trigger("change");
            txtTotalAmount.val("");
        }


        function validates() {
           // debugger;
            var isValid = true;
            $(".error").addClass('hide');

            if (ddlProductName.val() === "") {
                $(".req-ProductName").removeClass('hide');
                isValid = false;
            }
            if (ddlMeasurementName.val() === "") {
                $(".req-MeasurementName").removeClass('hide');
                isValid = false;
            }
            if (txtQuanity.val() === "") {
                $(".req-Quanity").removeClass('hide');
                isValid = false;
            }
            if (txtPrice.val() === "") {
                $(".req-txtPrice").removeClass('hide');
                isValid = false;
            }
            if (ddlMode.val() === "") {
                $(".req-ddlMode").removeClass('hide');
                isValid = false;
            }




            return isValid;
        }






        $("#btnSubmit").click(function (e) {

            debugger;
            e.preventDefault();

                     var info = { PackageId: 0, PackageName: ddlpackagename.val(), StartDate: dptFromDate.val(), EndDate: dptToDate.val(), TotalAmount: ddlpayableamount.val() };


                     var details = [];
                     details.length = 0;

                     $.each($("#tblList tbody tr"), function (index, item) {
                         var tds = $(this).children('td');
                         debugger;
                         details.push({
                             PackageDetailsId: 0,
                             FinishGoodProductId: tds.eq(7).html(),
                             MeasurementId: tds.eq(8).html(),
                             FGRId: tds.eq(9).html(),
                             Quanity: tds.eq(3).html(),
                             Amount: tds.eq(4).html(),
                             Status: tds.eq(5).html(),

                         });
                     })
                     console.log(info);
                     console.log(details);

                  var data = JSON.stringify({ info: info, details: details });

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/AgroConfiguration/SavePackageCreate', data, getToken())).then(function (res, status) {
                 debugger;
                if (res === true) {

                    $('.toastrDefaultSuccess').trigger('click');
                    setTimeout(function () {
                        redirectPage('@Url.Action("GetPackageList")');
                    }, 1000);
                }

                else {
                    $('.toastrDefaultError').trigger('click');
                }
                enable("#saveButton");
            }).fail(function (error) {
                alert(execuStatus.fail);
                enable("#saveButton");
            })



        });




        function redirectPage(page)
        {
          window.location.replace(page);
        }


    </script>


}