@{
    ViewBag.Title = "CreateRawMaterialReturnList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    table.tablesubtotal tr th {
        background-color: black !important;
        color: white !important;
    }

    table.tadd tr th {
        background-color: darkcyan !important;
        color: white !important;
    }


</style>

<div class="row"  style="margin-top:-25px">

    <div class="col-md-12">

        <div class="card card-navy">
            <div class="card-header" style="text-align: center;">

                <div class="row" @*style="margin-bottom:-7px"*@>

                    <div class="col-md-12">
                        <button class="btn btn-success btn float-right btn-sm" id="saveButton">SAVE <i class="fas fa-paper-plane"></i></button>

                        <h5 class="text-center text-bold">
                            Create RawMaterial Return
                        </h5>
                    </div>
                </div>
            </div>
        </div>

            <div class="card-body" @*style="background-color:#e7f1f6"*@ id="cardWithOutRequisition">
                <div class="row" @*style="margin-top:-15px"*@>


                    <div class="col-md-12">
                        <div class="container-fluid">
                          
                            <div class="row justify-content-center">

                                <div class="col-md-12">

                                    <div class="row justify-content-center">
                                        <div class="col-md-2">
                                            <label class="control-label" for="ddlRawmaterialName">RawMaterial</label>
                                            @Html.DropDownList("ddlRawmaterialName", (IEnumerable<SelectListItem>)ViewBag.ddlRawmaterialName, "--Select RawMaterial--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
                                            <span class="error hide req-ddlRawmaterialName">RawMaterial Is Required</span>
                                        </div>

                                        <div class="col-md-2">
                                            <label for="ddlUnitName">Unit</label>
                                            <input type="text" id="ddlUnitName" name="ddlUnitName" class="form-control form-control-sm" readonly />
                                        </div>
                                        <div class="hide">
                                            <label for="ddlUnitID">UnitID</label>
                                            <input type="text" id="ddlUnitID" name="ddlUnitID" class="form-control form-control-sm" readonly />
                                        </div>

                                        <div class="col-md-2">
                                            <label for="ddlreturnqty"> Qty</label>
                                            <input type="number" id="ddlreturnqty" name="qty" class="form-control form-control-sm" />
                                            <span class="error hide req-qty">Qty Is Required</span>
                                            <span>Stock: <span id="RawMaterialStockQty">0</span> </span>
                                            <span class="error hide req-qtyChecking">Quantity Must be less than or equal material Qty</span>
                                        </div>
                                        <div class="col-md-2">
                                            <label for="ddlReturnType" class="control-label">Return Type</label>
                                            <select id="ddlReturnType" class="form-control form-control-sm" select2>
                                                <option value="">Select Type</option>
                                                <option value="Good">Good</option>
                                                <option value="Damage">Damage</option>
                                            </select>
                                            <span class="error hide req-ddlReturnType">Return Type Is Required</span>
                                        </div>
                                        <div class="col-md-1">
                                            <label for="" class="control-label font-weight-bold" style="visibility:hidden">Add</label>
                                            <div class="clearfix">
                                                <button type="submit" class="btn btn-sm btn-outline-success" id="addTolist"><i class="fas fa-plus"></i></button>
                                            </div>
                                        </div>
                                    </div>

                                </div>


                            </div>
                        </div>
                    </div>


                    <div class="card-body" id="tblWithOutRequistion">

                        <div class="card-body table-responsive p-0 shadow" style="height: 200px;">
                            <table class="table table-head-fixed text-nowrap tadd" id="tblPstockrawmaterial">
                                <thead>

                                    <tr class="text-center" style="color:black">

                                        <th>#SL</th>
                                        <th>Raw Material</th>
                                        <th>Unit</th>
                                        <th>QTY</th>
                                        <th>Return Type</th>
                                        <th>Action</th>
                                        <th class="hide RMId"></th>
                                        <th class="hide unitId"></th>

                                    </tr>

                                </thead>
                                <tbody class="bg-gradient-gray"></tbody>
                            </table>
                        </div>
                    </div>


                </div>
            </div>

        @*</div>*@

    </div>




    @*addbodey*@


</div>


@section scripts{
    <script type="text/javascript">

        var ddlRawmaterialName = $("#ddlRawmaterialName");
        var ddlUnitName = $("#ddlUnitName");
        var ddlUnitID = $("#ddlUnitID");
        var ddlreturnqty = $("#ddlreturnqty");
        var ddlReturnType = $("#ddlReturnType");
        var RawMaterialStockQty = $("#RawMaterialStockQty");

        var ddlRawMaterialList = [];

       


        $(document).ready(function () {
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
            $("#btnSubmit").hide();

 

        })






        ddlRawmaterialName.change(function () {

            //debugger;
            var data = { RawMaterialId: ddlRawmaterialName.val() };

            $.when(getReqWithData('Html', "Get", "/AgroConfiguration/RawMaterialStockLoadUnitName", data)).then(function (res, status) {


                consoleLog(res.replace(/['"]+/g, ''));
                var unit = res.replace(/['"]+/g, '');
                ddlUnitName.val(res.UnitName);
                ddlUnitName.val(unit);

            });
            $.when(getReqWithData('Html', "Get", "/AgroConfiguration/RawMaterialStockLoadUnitID", data)).then(function (res, status) {


                consoleLog(res.replace(/['"]+/g, ''));
                var unit = res.replace(/['"]+/g, '');
                ddlUnitID.val(res.UnitIDd);
                ddlUnitID.val(unit);

            });


            $.when(getReqWithData('Html', "Get", "/AgroConfiguration/GetReturnStockQty", data)).then(function (res, status) {

                debugger;
                consoleLog(res.replace(/['"]+/g, ''));
                $('#RawMaterialStockQty').text(res);


            });

        })


        function InternalRawmertrialQty() {
          
            var RawMaterialStockQty = document.getElementById("RawMaterialStockQty").innerText;
            var TextQty = ddlreturnqty.val();
            var CurrentQty = RawMaterialStockQty - TextQty;
            document.getElementById("RawMaterialStockQty").textContent = CurrentQty;
           
        }
        //add
        $("#addTolist").click(function (e) {
            //alert();
            debugger;
            e.preventDefault();


            if (validateAddToList()) {

                //InternalRawmertrialQty();
            
                    var sl = $("#tblPstockrawmaterial tbody tr").length;
                    var td1 = "<td class='text-center'><b>" + (sl + 1) + "</b></td>"
                    var td2 = "<td class='text-center'>" + dropDownSelectedText("ddlRawmaterialName") + "</td>";
                    var td3 = "<td class='text-center'>" + ddlUnitName.val() + "</td>";
                    var td4 = "<td class='text-center'>" + ddlreturnqty.val() + "</td>";
                    var td5 = "<td class='text-center'>" + ddlReturnType.val() + "</td>";
                    var td6 = "<td class='text-center'><a href='#' class='btn btn-sm btn-danger data-onfly-del'><i class='far fa-trash-alt'></i> Delete</a></td>";

                    var td7 = "<td class='text-center hide'>" + ddlRawmaterialName.val() + "</td>";
                    var td8 = "<td class='text-center hide'>" + ddlUnitID.val() + "</td>";

                    var tr = "<tr>" + td1 + td2 + td3 + td4 + td5 + td6 + td7 + td8 + "</tr>";


                    $("#tblPstockrawmaterial tbody").append(tr);
                    ddlRawMaterialList.push(ddlRawmaterialName.val());

                
                clearCtrlStk();
            }

        })


        //remove
        $(document).on("click", "a.data-onfly-del", function (e) {
            //debugger;
            e.preventDefault();
            var index = $(this).parent().parents('tbody tr').index();
            var tds = $(this).parent().parents('tbody tr').children('td');


            var rId = tds.eq(6).html();
            console.log("rId :" + rId);
            const mid = ddlRawMaterialList.indexOf(rId);
            console.log(ddlRawMaterialList);

            ddlRawMaterialList.splice(mid, 1);

            if (bootbox.confirm("Are you sure you want to delete?", function (result) {
                if (result === true) {
                    removeTableRow("#tblPstockrawmaterial tbody", index);
                    fnFixTheTbodyRowSerial("#tblPstockrawmaterial tbody", index);

                };
            }));

        })
        //quantityCheck function
        function QuantityCheck() {
            //debugger;
            var isValid = false;
            var originalQty = RawMaterialStockQty.text();
            var qty = originalQty.replace(/\(|\)/g, '');
            console.log(qty);
            if (TryParseInt(ddlreturnqty.val()) > qty) {
                isValid = true
            }
            return isValid;
        }



        //validationadd
        function validateAddToList() {
           // debugger;
            var isValid = true;
            $(".error").addClass('hide');

            if ($.trim(ddlRawmaterialName.val()) == 0) {
                $(".req-ddlRawmaterialName").removeClass('hide');
                isValid = false;
            }
            if (ddlReturnType.val() === "") {
                $(".req-ddlReturnType").removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(ddlreturnqty.val(), 0) <= 0) {
                $(".req-qty").removeClass('hide');
                isValid = false;
            }
            if (QuantityCheck() == true) {
                $(".req-qtyChecking").removeClass('hide');
                isValid = false;
            }

            return isValid;
        }


        //clear
        function clearCtrlStk() {
            //debugger;
            ddlRawmaterialName.val("");
            ddlRawmaterialName.trigger("change");
            ddlreturnqty.val("");
            ddlUnitName.val("");
            ddlUnitID.val("");
            ddlReturnType.val("");
            ddlReturnType.trigger("change");
            RawMaterialStockQty.text("");
        }


                //save in database
        $("#saveButton").click(function (e) {
            debugger;
            e.preventDefault();

            var details = [];
            details.length = 0;
            $.each($("#tblPstockrawmaterial tbody tr"), function (index, item) {
                var tds = $(this).children('td');
                details.push({

                    ReturnRawMaterialId: 0,
                    Quantity: tds.eq(3).html(),
                    ReturnType: tds.eq(4).html(),
                    RawMaterialId: tds.eq(6).html(),
                    UnitId: tds.eq(7).html(),

                });
            })
            console.log(details);
            var data = JSON.stringify({ details: details });

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/AgroConfiguration/SaveRawMaterialReturnInfo', data, getToken())).then(function (res, status) {
                if (res === true) {
                    debugger;
                    $('.toastrDefaultSuccess').trigger('click');
                    setTimeout(function () {
                        redirectPage('@Url.Action("RawMaterialReturnAllList")');
                    }, 1000);
                }
                else {
                    $('.toastrDefaultError').trigger('click');
                }
                enable("#saveButton");
            }).fail(function (error) {
                alert(execuStatus.fail);
                enable("#saveButton");
            })

            function redirectPage(page) {
                window.location.replace(page);
            }

        });


    </script>
}